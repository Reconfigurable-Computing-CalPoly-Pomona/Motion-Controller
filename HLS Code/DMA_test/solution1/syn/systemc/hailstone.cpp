// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "hailstone.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic hailstone::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic hailstone::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> hailstone::ap_ST_fsm_state1 = "1";
const sc_lv<7> hailstone::ap_ST_fsm_state2 = "10";
const sc_lv<7> hailstone::ap_ST_fsm_state3 = "100";
const sc_lv<7> hailstone::ap_ST_fsm_state4 = "1000";
const sc_lv<7> hailstone::ap_ST_fsm_state5 = "10000";
const sc_lv<7> hailstone::ap_ST_fsm_state6 = "100000";
const sc_lv<7> hailstone::ap_ST_fsm_state7 = "1000000";
const bool hailstone::ap_const_boolean_1 = true;
const sc_lv<1> hailstone::ap_const_lv1_0 = "0";
const sc_lv<1> hailstone::ap_const_lv1_1 = "1";
const sc_lv<2> hailstone::ap_const_lv2_0 = "00";
const sc_lv<2> hailstone::ap_const_lv2_2 = "10";
const sc_lv<2> hailstone::ap_const_lv2_3 = "11";
const sc_lv<2> hailstone::ap_const_lv2_1 = "1";
const sc_lv<32> hailstone::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> hailstone::ap_const_lv32_2 = "10";
const sc_lv<32> hailstone::ap_const_lv32_3 = "11";
const sc_lv<32> hailstone::ap_const_lv32_5 = "101";
const int hailstone::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> hailstone::ap_const_lv32_1 = "1";
const bool hailstone::ap_const_boolean_0 = false;
const sc_lv<32> hailstone::ap_const_lv32_4 = "100";
const sc_lv<31> hailstone::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<31> hailstone::ap_const_lv31_1 = "1";
const sc_lv<32> hailstone::ap_const_lv32_1F = "11111";
const sc_lv<32> hailstone::ap_const_lv32_6 = "110";

hailstone::hailstone(sc_module_name name) : sc_module(name), mVcdFile(0) {
    hailstone_AXILiteS_s_axi_U = new hailstone_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("hailstone_AXILiteS_s_axi_U");
    hailstone_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    hailstone_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    hailstone_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    hailstone_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    hailstone_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    hailstone_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    hailstone_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    hailstone_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    hailstone_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    hailstone_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    hailstone_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    hailstone_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    hailstone_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    hailstone_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    hailstone_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    hailstone_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    hailstone_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    hailstone_AXILiteS_s_axi_U->ACLK(ap_clk);
    hailstone_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    hailstone_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    hailstone_AXILiteS_s_axi_U->buf_len_V(buf_len_V);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( tmp_fu_179_p2 );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( out_data_data_V_1_ack_in );
    sensitive << ( ap_predicate_op60_write_state4 );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( out_data_data_V_1_ack_in );
    sensitive << ( out_data_keep_V_1_ack_in );
    sensitive << ( out_data_strb_V_1_ack_in );
    sensitive << ( out_data_user_V_1_ack_in );
    sensitive << ( out_data_last_V_1_ack_in );
    sensitive << ( out_data_id_V_1_ack_in );
    sensitive << ( out_data_dest_V_1_ack_in );

    SC_METHOD(thread_ap_predicate_op60_write_state4);
    sensitive << ( tmp_1_fu_218_p1 );
    sensitive << ( icmp_fu_238_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_buf_len_V_0_ack_out);
    sensitive << ( out_data_data_V_1_ack_in );
    sensitive << ( out_data_keep_V_1_ack_in );
    sensitive << ( out_data_strb_V_1_ack_in );
    sensitive << ( out_data_user_V_1_ack_in );
    sensitive << ( out_data_last_V_1_ack_in );
    sensitive << ( out_data_id_V_1_ack_in );
    sensitive << ( out_data_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_count_2_fu_262_p2);
    sensitive << ( val_assign_reg_140 );

    SC_METHOD(thread_count_fu_222_p2);
    sensitive << ( val_assign_reg_140 );

    SC_METHOD(thread_cur_1_fu_316_p3);
    sensitive << ( tmp_6_fu_268_p3 );
    sensitive << ( p_neg_t_fu_296_p2 );
    sensitive << ( tmp_3_fu_312_p1 );

    SC_METHOD(thread_i_fu_184_p2);
    sensitive << ( i_op_assign_reg_119 );

    SC_METHOD(thread_i_op_assign_cast_fu_175_p1);
    sensitive << ( i_op_assign_reg_119 );

    SC_METHOD(thread_icmp_fu_238_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_218_p1 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( tmp_4_fu_228_p4 );

    SC_METHOD(thread_in_data_TDATA_blk_n);
    sensitive << ( in_data_data_V_0_state );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );

    SC_METHOD(thread_in_data_TREADY);
    sensitive << ( in_data_dest_V_0_state );

    SC_METHOD(thread_in_data_data_V_0_ack_in);
    sensitive << ( in_data_data_V_0_state );

    SC_METHOD(thread_in_data_data_V_0_ack_out);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );

    SC_METHOD(thread_in_data_data_V_0_data_out);
    sensitive << ( in_data_data_V_0_payload_A );
    sensitive << ( in_data_data_V_0_payload_B );
    sensitive << ( in_data_data_V_0_sel );

    SC_METHOD(thread_in_data_data_V_0_load_A);
    sensitive << ( in_data_data_V_0_sel_wr );
    sensitive << ( in_data_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_data_V_0_load_B);
    sensitive << ( in_data_data_V_0_sel_wr );
    sensitive << ( in_data_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_data_V_0_sel);
    sensitive << ( in_data_data_V_0_sel_rd );

    SC_METHOD(thread_in_data_data_V_0_state_cmp_full);
    sensitive << ( in_data_data_V_0_state );

    SC_METHOD(thread_in_data_data_V_0_vld_in);
    sensitive << ( in_data_TVALID );

    SC_METHOD(thread_in_data_data_V_0_vld_out);
    sensitive << ( in_data_data_V_0_state );

    SC_METHOD(thread_in_data_dest_V_0_ack_in);
    sensitive << ( in_data_dest_V_0_state );

    SC_METHOD(thread_in_data_dest_V_0_ack_out);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );

    SC_METHOD(thread_in_data_dest_V_0_data_out);
    sensitive << ( in_data_dest_V_0_payload_A );
    sensitive << ( in_data_dest_V_0_payload_B );
    sensitive << ( in_data_dest_V_0_sel );

    SC_METHOD(thread_in_data_dest_V_0_load_A);
    sensitive << ( in_data_dest_V_0_sel_wr );
    sensitive << ( in_data_dest_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_dest_V_0_load_B);
    sensitive << ( in_data_dest_V_0_sel_wr );
    sensitive << ( in_data_dest_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_dest_V_0_sel);
    sensitive << ( in_data_dest_V_0_sel_rd );

    SC_METHOD(thread_in_data_dest_V_0_state_cmp_full);
    sensitive << ( in_data_dest_V_0_state );

    SC_METHOD(thread_in_data_dest_V_0_vld_in);
    sensitive << ( in_data_TVALID );

    SC_METHOD(thread_in_data_dest_V_0_vld_out);
    sensitive << ( in_data_dest_V_0_state );

    SC_METHOD(thread_in_data_id_V_0_ack_in);
    sensitive << ( in_data_id_V_0_state );

    SC_METHOD(thread_in_data_id_V_0_ack_out);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );

    SC_METHOD(thread_in_data_id_V_0_data_out);
    sensitive << ( in_data_id_V_0_payload_A );
    sensitive << ( in_data_id_V_0_payload_B );
    sensitive << ( in_data_id_V_0_sel );

    SC_METHOD(thread_in_data_id_V_0_load_A);
    sensitive << ( in_data_id_V_0_sel_wr );
    sensitive << ( in_data_id_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_id_V_0_load_B);
    sensitive << ( in_data_id_V_0_sel_wr );
    sensitive << ( in_data_id_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_id_V_0_sel);
    sensitive << ( in_data_id_V_0_sel_rd );

    SC_METHOD(thread_in_data_id_V_0_state_cmp_full);
    sensitive << ( in_data_id_V_0_state );

    SC_METHOD(thread_in_data_id_V_0_vld_in);
    sensitive << ( in_data_TVALID );

    SC_METHOD(thread_in_data_id_V_0_vld_out);
    sensitive << ( in_data_id_V_0_state );

    SC_METHOD(thread_in_data_keep_V_0_ack_in);
    sensitive << ( in_data_keep_V_0_state );

    SC_METHOD(thread_in_data_keep_V_0_ack_out);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );

    SC_METHOD(thread_in_data_keep_V_0_data_out);
    sensitive << ( in_data_keep_V_0_payload_A );
    sensitive << ( in_data_keep_V_0_payload_B );
    sensitive << ( in_data_keep_V_0_sel );

    SC_METHOD(thread_in_data_keep_V_0_load_A);
    sensitive << ( in_data_keep_V_0_sel_wr );
    sensitive << ( in_data_keep_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_keep_V_0_load_B);
    sensitive << ( in_data_keep_V_0_sel_wr );
    sensitive << ( in_data_keep_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_keep_V_0_sel);
    sensitive << ( in_data_keep_V_0_sel_rd );

    SC_METHOD(thread_in_data_keep_V_0_state_cmp_full);
    sensitive << ( in_data_keep_V_0_state );

    SC_METHOD(thread_in_data_keep_V_0_vld_in);
    sensitive << ( in_data_TVALID );

    SC_METHOD(thread_in_data_keep_V_0_vld_out);
    sensitive << ( in_data_keep_V_0_state );

    SC_METHOD(thread_in_data_last_V_0_ack_in);
    sensitive << ( in_data_last_V_0_state );

    SC_METHOD(thread_in_data_last_V_0_ack_out);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );

    SC_METHOD(thread_in_data_last_V_0_data_out);
    sensitive << ( in_data_last_V_0_payload_A );
    sensitive << ( in_data_last_V_0_payload_B );
    sensitive << ( in_data_last_V_0_sel );

    SC_METHOD(thread_in_data_last_V_0_load_A);
    sensitive << ( in_data_last_V_0_sel_wr );
    sensitive << ( in_data_last_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_last_V_0_load_B);
    sensitive << ( in_data_last_V_0_sel_wr );
    sensitive << ( in_data_last_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_last_V_0_sel);
    sensitive << ( in_data_last_V_0_sel_rd );

    SC_METHOD(thread_in_data_last_V_0_state_cmp_full);
    sensitive << ( in_data_last_V_0_state );

    SC_METHOD(thread_in_data_last_V_0_vld_in);
    sensitive << ( in_data_TVALID );

    SC_METHOD(thread_in_data_last_V_0_vld_out);
    sensitive << ( in_data_last_V_0_state );

    SC_METHOD(thread_in_data_strb_V_0_ack_in);
    sensitive << ( in_data_strb_V_0_state );

    SC_METHOD(thread_in_data_strb_V_0_ack_out);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );

    SC_METHOD(thread_in_data_strb_V_0_data_out);
    sensitive << ( in_data_strb_V_0_payload_A );
    sensitive << ( in_data_strb_V_0_payload_B );
    sensitive << ( in_data_strb_V_0_sel );

    SC_METHOD(thread_in_data_strb_V_0_load_A);
    sensitive << ( in_data_strb_V_0_sel_wr );
    sensitive << ( in_data_strb_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_strb_V_0_load_B);
    sensitive << ( in_data_strb_V_0_sel_wr );
    sensitive << ( in_data_strb_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_strb_V_0_sel);
    sensitive << ( in_data_strb_V_0_sel_rd );

    SC_METHOD(thread_in_data_strb_V_0_state_cmp_full);
    sensitive << ( in_data_strb_V_0_state );

    SC_METHOD(thread_in_data_strb_V_0_vld_in);
    sensitive << ( in_data_TVALID );

    SC_METHOD(thread_in_data_strb_V_0_vld_out);
    sensitive << ( in_data_strb_V_0_state );

    SC_METHOD(thread_in_data_user_V_0_ack_in);
    sensitive << ( in_data_user_V_0_state );

    SC_METHOD(thread_in_data_user_V_0_ack_out);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );

    SC_METHOD(thread_in_data_user_V_0_data_out);
    sensitive << ( in_data_user_V_0_payload_A );
    sensitive << ( in_data_user_V_0_payload_B );
    sensitive << ( in_data_user_V_0_sel );

    SC_METHOD(thread_in_data_user_V_0_load_A);
    sensitive << ( in_data_user_V_0_sel_wr );
    sensitive << ( in_data_user_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_user_V_0_load_B);
    sensitive << ( in_data_user_V_0_sel_wr );
    sensitive << ( in_data_user_V_0_state_cmp_full );

    SC_METHOD(thread_in_data_user_V_0_sel);
    sensitive << ( in_data_user_V_0_sel_rd );

    SC_METHOD(thread_in_data_user_V_0_state_cmp_full);
    sensitive << ( in_data_user_V_0_state );

    SC_METHOD(thread_in_data_user_V_0_vld_in);
    sensitive << ( in_data_TVALID );

    SC_METHOD(thread_in_data_user_V_0_vld_out);
    sensitive << ( in_data_user_V_0_state );

    SC_METHOD(thread_out_data_TDATA);
    sensitive << ( out_data_data_V_1_data_out );

    SC_METHOD(thread_out_data_TDATA_blk_n);
    sensitive << ( out_data_data_V_1_state );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_218_p1 );
    sensitive << ( icmp_fu_238_p2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_out_data_TDEST);
    sensitive << ( out_data_dest_V_1_data_out );

    SC_METHOD(thread_out_data_TID);
    sensitive << ( out_data_id_V_1_data_out );

    SC_METHOD(thread_out_data_TKEEP);
    sensitive << ( out_data_keep_V_1_data_out );

    SC_METHOD(thread_out_data_TLAST);
    sensitive << ( out_data_last_V_1_data_out );

    SC_METHOD(thread_out_data_TSTRB);
    sensitive << ( out_data_strb_V_1_data_out );

    SC_METHOD(thread_out_data_TUSER);
    sensitive << ( out_data_user_V_1_data_out );

    SC_METHOD(thread_out_data_TVALID);
    sensitive << ( out_data_dest_V_1_state );

    SC_METHOD(thread_out_data_data_V_1_ack_in);
    sensitive << ( out_data_data_V_1_state );

    SC_METHOD(thread_out_data_data_V_1_ack_out);
    sensitive << ( out_data_TREADY );

    SC_METHOD(thread_out_data_data_V_1_data_out);
    sensitive << ( out_data_data_V_1_payload_A );
    sensitive << ( out_data_data_V_1_payload_B );
    sensitive << ( out_data_data_V_1_sel );

    SC_METHOD(thread_out_data_data_V_1_load_A);
    sensitive << ( out_data_data_V_1_sel_wr );
    sensitive << ( out_data_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_data_V_1_load_B);
    sensitive << ( out_data_data_V_1_sel_wr );
    sensitive << ( out_data_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_data_V_1_sel);
    sensitive << ( out_data_data_V_1_sel_rd );

    SC_METHOD(thread_out_data_data_V_1_state_cmp_full);
    sensitive << ( out_data_data_V_1_state );

    SC_METHOD(thread_out_data_data_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_predicate_op60_write_state4 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_out_data_data_V_1_vld_out);
    sensitive << ( out_data_data_V_1_state );

    SC_METHOD(thread_out_data_dest_V_1_ack_in);
    sensitive << ( out_data_dest_V_1_state );

    SC_METHOD(thread_out_data_dest_V_1_ack_out);
    sensitive << ( out_data_TREADY );

    SC_METHOD(thread_out_data_dest_V_1_data_out);
    sensitive << ( out_data_dest_V_1_payload_A );
    sensitive << ( out_data_dest_V_1_payload_B );
    sensitive << ( out_data_dest_V_1_sel );

    SC_METHOD(thread_out_data_dest_V_1_load_A);
    sensitive << ( out_data_dest_V_1_sel_wr );
    sensitive << ( out_data_dest_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_dest_V_1_load_B);
    sensitive << ( out_data_dest_V_1_sel_wr );
    sensitive << ( out_data_dest_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_dest_V_1_sel);
    sensitive << ( out_data_dest_V_1_sel_rd );

    SC_METHOD(thread_out_data_dest_V_1_state_cmp_full);
    sensitive << ( out_data_dest_V_1_state );

    SC_METHOD(thread_out_data_dest_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_predicate_op60_write_state4 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_out_data_dest_V_1_vld_out);
    sensitive << ( out_data_dest_V_1_state );

    SC_METHOD(thread_out_data_id_V_1_ack_in);
    sensitive << ( out_data_id_V_1_state );

    SC_METHOD(thread_out_data_id_V_1_ack_out);
    sensitive << ( out_data_TREADY );

    SC_METHOD(thread_out_data_id_V_1_data_out);
    sensitive << ( out_data_id_V_1_payload_A );
    sensitive << ( out_data_id_V_1_payload_B );
    sensitive << ( out_data_id_V_1_sel );

    SC_METHOD(thread_out_data_id_V_1_load_A);
    sensitive << ( out_data_id_V_1_sel_wr );
    sensitive << ( out_data_id_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_id_V_1_load_B);
    sensitive << ( out_data_id_V_1_sel_wr );
    sensitive << ( out_data_id_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_id_V_1_sel);
    sensitive << ( out_data_id_V_1_sel_rd );

    SC_METHOD(thread_out_data_id_V_1_state_cmp_full);
    sensitive << ( out_data_id_V_1_state );

    SC_METHOD(thread_out_data_id_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_predicate_op60_write_state4 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_out_data_id_V_1_vld_out);
    sensitive << ( out_data_id_V_1_state );

    SC_METHOD(thread_out_data_keep_V_1_ack_in);
    sensitive << ( out_data_keep_V_1_state );

    SC_METHOD(thread_out_data_keep_V_1_ack_out);
    sensitive << ( out_data_TREADY );

    SC_METHOD(thread_out_data_keep_V_1_data_out);
    sensitive << ( out_data_keep_V_1_payload_A );
    sensitive << ( out_data_keep_V_1_payload_B );
    sensitive << ( out_data_keep_V_1_sel );

    SC_METHOD(thread_out_data_keep_V_1_load_A);
    sensitive << ( out_data_keep_V_1_sel_wr );
    sensitive << ( out_data_keep_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_keep_V_1_load_B);
    sensitive << ( out_data_keep_V_1_sel_wr );
    sensitive << ( out_data_keep_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_keep_V_1_sel);
    sensitive << ( out_data_keep_V_1_sel_rd );

    SC_METHOD(thread_out_data_keep_V_1_state_cmp_full);
    sensitive << ( out_data_keep_V_1_state );

    SC_METHOD(thread_out_data_keep_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_predicate_op60_write_state4 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_out_data_keep_V_1_vld_out);
    sensitive << ( out_data_keep_V_1_state );

    SC_METHOD(thread_out_data_last_V_1_ack_in);
    sensitive << ( out_data_last_V_1_state );

    SC_METHOD(thread_out_data_last_V_1_ack_out);
    sensitive << ( out_data_TREADY );

    SC_METHOD(thread_out_data_last_V_1_data_out);
    sensitive << ( out_data_last_V_1_payload_A );
    sensitive << ( out_data_last_V_1_payload_B );
    sensitive << ( out_data_last_V_1_sel );

    SC_METHOD(thread_out_data_last_V_1_load_A);
    sensitive << ( out_data_last_V_1_sel_wr );
    sensitive << ( out_data_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_last_V_1_load_B);
    sensitive << ( out_data_last_V_1_sel_wr );
    sensitive << ( out_data_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_last_V_1_sel);
    sensitive << ( out_data_last_V_1_sel_rd );

    SC_METHOD(thread_out_data_last_V_1_state_cmp_full);
    sensitive << ( out_data_last_V_1_state );

    SC_METHOD(thread_out_data_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_predicate_op60_write_state4 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_out_data_last_V_1_vld_out);
    sensitive << ( out_data_last_V_1_state );

    SC_METHOD(thread_out_data_strb_V_1_ack_in);
    sensitive << ( out_data_strb_V_1_state );

    SC_METHOD(thread_out_data_strb_V_1_ack_out);
    sensitive << ( out_data_TREADY );

    SC_METHOD(thread_out_data_strb_V_1_data_out);
    sensitive << ( out_data_strb_V_1_payload_A );
    sensitive << ( out_data_strb_V_1_payload_B );
    sensitive << ( out_data_strb_V_1_sel );

    SC_METHOD(thread_out_data_strb_V_1_load_A);
    sensitive << ( out_data_strb_V_1_sel_wr );
    sensitive << ( out_data_strb_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_strb_V_1_load_B);
    sensitive << ( out_data_strb_V_1_sel_wr );
    sensitive << ( out_data_strb_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_strb_V_1_sel);
    sensitive << ( out_data_strb_V_1_sel_rd );

    SC_METHOD(thread_out_data_strb_V_1_state_cmp_full);
    sensitive << ( out_data_strb_V_1_state );

    SC_METHOD(thread_out_data_strb_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_predicate_op60_write_state4 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_out_data_strb_V_1_vld_out);
    sensitive << ( out_data_strb_V_1_state );

    SC_METHOD(thread_out_data_user_V_1_ack_in);
    sensitive << ( out_data_user_V_1_state );

    SC_METHOD(thread_out_data_user_V_1_ack_out);
    sensitive << ( out_data_TREADY );

    SC_METHOD(thread_out_data_user_V_1_data_out);
    sensitive << ( out_data_user_V_1_payload_A );
    sensitive << ( out_data_user_V_1_payload_B );
    sensitive << ( out_data_user_V_1_sel );

    SC_METHOD(thread_out_data_user_V_1_load_A);
    sensitive << ( out_data_user_V_1_sel_wr );
    sensitive << ( out_data_user_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_user_V_1_load_B);
    sensitive << ( out_data_user_V_1_sel_wr );
    sensitive << ( out_data_user_V_1_state_cmp_full );

    SC_METHOD(thread_out_data_user_V_1_sel);
    sensitive << ( out_data_user_V_1_sel_rd );

    SC_METHOD(thread_out_data_user_V_1_state_cmp_full);
    sensitive << ( out_data_user_V_1_state );

    SC_METHOD(thread_out_data_user_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_predicate_op60_write_state4 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_out_data_user_V_1_vld_out);
    sensitive << ( out_data_user_V_1_state );

    SC_METHOD(thread_p_lshr_f_fu_302_p4);
    sensitive << ( cur_1_in_reg_154 );

    SC_METHOD(thread_p_lshr_fu_282_p4);
    sensitive << ( p_neg_fu_276_p2 );

    SC_METHOD(thread_p_neg_fu_276_p2);
    sensitive << ( cur_1_in_reg_154 );

    SC_METHOD(thread_p_neg_t_fu_296_p2);
    sensitive << ( tmp_2_fu_292_p1 );

    SC_METHOD(thread_tmp_1_fu_218_p1);
    sensitive << ( cur1_reg_130 );

    SC_METHOD(thread_tmp_2_fu_292_p1);
    sensitive << ( p_lshr_fu_282_p4 );

    SC_METHOD(thread_tmp_3_fu_312_p1);
    sensitive << ( p_lshr_f_fu_302_p4 );

    SC_METHOD(thread_tmp_4_fu_228_p4);
    sensitive << ( cur1_reg_130 );

    SC_METHOD(thread_tmp_5_fu_244_p2);
    sensitive << ( cur1_reg_130 );

    SC_METHOD(thread_tmp_6_fu_268_p3);
    sensitive << ( cur_1_in_reg_154 );

    SC_METHOD(thread_tmp_7_fu_250_p2);
    sensitive << ( cur1_reg_130 );
    sensitive << ( tmp_5_fu_244_p2 );

    SC_METHOD(thread_tmp_8_fu_256_p2);
    sensitive << ( tmp_7_fu_250_p2 );

    SC_METHOD(thread_tmp_fu_179_p2);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );
    sensitive << ( buf_len_V_read_reg_324 );
    sensitive << ( i_op_assign_cast_fu_175_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( in_data_data_V_0_vld_out );
    sensitive << ( out_data_data_V_1_ack_in );
    sensitive << ( out_data_data_V_1_state );
    sensitive << ( out_data_keep_V_1_ack_in );
    sensitive << ( out_data_keep_V_1_state );
    sensitive << ( out_data_strb_V_1_ack_in );
    sensitive << ( out_data_strb_V_1_state );
    sensitive << ( out_data_user_V_1_ack_in );
    sensitive << ( out_data_user_V_1_state );
    sensitive << ( out_data_last_V_1_ack_in );
    sensitive << ( out_data_last_V_1_state );
    sensitive << ( out_data_id_V_1_ack_in );
    sensitive << ( out_data_id_V_1_state );
    sensitive << ( out_data_dest_V_1_ack_in );
    sensitive << ( out_data_dest_V_1_state );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_179_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_218_p1 );
    sensitive << ( icmp_fu_238_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_CS_fsm_state7 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    in_data_data_V_0_sel_rd = SC_LOGIC_0;
    in_data_data_V_0_sel_wr = SC_LOGIC_0;
    in_data_data_V_0_state = "00";
    in_data_keep_V_0_sel_rd = SC_LOGIC_0;
    in_data_keep_V_0_sel_wr = SC_LOGIC_0;
    in_data_keep_V_0_state = "00";
    in_data_strb_V_0_sel_rd = SC_LOGIC_0;
    in_data_strb_V_0_sel_wr = SC_LOGIC_0;
    in_data_strb_V_0_state = "00";
    in_data_user_V_0_sel_rd = SC_LOGIC_0;
    in_data_user_V_0_sel_wr = SC_LOGIC_0;
    in_data_user_V_0_state = "00";
    in_data_last_V_0_sel_rd = SC_LOGIC_0;
    in_data_last_V_0_sel_wr = SC_LOGIC_0;
    in_data_last_V_0_state = "00";
    in_data_id_V_0_sel_rd = SC_LOGIC_0;
    in_data_id_V_0_sel_wr = SC_LOGIC_0;
    in_data_id_V_0_state = "00";
    in_data_dest_V_0_sel_rd = SC_LOGIC_0;
    in_data_dest_V_0_sel_wr = SC_LOGIC_0;
    in_data_dest_V_0_state = "00";
    out_data_data_V_1_sel_rd = SC_LOGIC_0;
    out_data_data_V_1_sel_wr = SC_LOGIC_0;
    out_data_data_V_1_state = "00";
    out_data_keep_V_1_sel_rd = SC_LOGIC_0;
    out_data_keep_V_1_sel_wr = SC_LOGIC_0;
    out_data_keep_V_1_state = "00";
    out_data_strb_V_1_sel_rd = SC_LOGIC_0;
    out_data_strb_V_1_sel_wr = SC_LOGIC_0;
    out_data_strb_V_1_state = "00";
    out_data_user_V_1_sel_rd = SC_LOGIC_0;
    out_data_user_V_1_sel_wr = SC_LOGIC_0;
    out_data_user_V_1_state = "00";
    out_data_last_V_1_sel_rd = SC_LOGIC_0;
    out_data_last_V_1_sel_wr = SC_LOGIC_0;
    out_data_last_V_1_state = "00";
    out_data_id_V_1_sel_rd = SC_LOGIC_0;
    out_data_id_V_1_sel_wr = SC_LOGIC_0;
    out_data_id_V_1_state = "00";
    out_data_dest_V_1_sel_rd = SC_LOGIC_0;
    out_data_dest_V_1_sel_wr = SC_LOGIC_0;
    out_data_dest_V_1_state = "00";
    buf_len_V_0_data_reg = "00000000000000000000000000000000";
    buf_len_V_0_vld_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "hailstone_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_data_TDATA, "(port)in_data_TDATA");
    sc_trace(mVcdFile, in_data_TVALID, "(port)in_data_TVALID");
    sc_trace(mVcdFile, in_data_TREADY, "(port)in_data_TREADY");
    sc_trace(mVcdFile, in_data_TKEEP, "(port)in_data_TKEEP");
    sc_trace(mVcdFile, in_data_TSTRB, "(port)in_data_TSTRB");
    sc_trace(mVcdFile, in_data_TUSER, "(port)in_data_TUSER");
    sc_trace(mVcdFile, in_data_TLAST, "(port)in_data_TLAST");
    sc_trace(mVcdFile, in_data_TID, "(port)in_data_TID");
    sc_trace(mVcdFile, in_data_TDEST, "(port)in_data_TDEST");
    sc_trace(mVcdFile, out_data_TDATA, "(port)out_data_TDATA");
    sc_trace(mVcdFile, out_data_TVALID, "(port)out_data_TVALID");
    sc_trace(mVcdFile, out_data_TREADY, "(port)out_data_TREADY");
    sc_trace(mVcdFile, out_data_TKEEP, "(port)out_data_TKEEP");
    sc_trace(mVcdFile, out_data_TSTRB, "(port)out_data_TSTRB");
    sc_trace(mVcdFile, out_data_TUSER, "(port)out_data_TUSER");
    sc_trace(mVcdFile, out_data_TLAST, "(port)out_data_TLAST");
    sc_trace(mVcdFile, out_data_TID, "(port)out_data_TID");
    sc_trace(mVcdFile, out_data_TDEST, "(port)out_data_TDEST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, in_data_data_V_0_data_out, "in_data_data_V_0_data_out");
    sc_trace(mVcdFile, in_data_data_V_0_vld_in, "in_data_data_V_0_vld_in");
    sc_trace(mVcdFile, in_data_data_V_0_vld_out, "in_data_data_V_0_vld_out");
    sc_trace(mVcdFile, in_data_data_V_0_ack_in, "in_data_data_V_0_ack_in");
    sc_trace(mVcdFile, in_data_data_V_0_ack_out, "in_data_data_V_0_ack_out");
    sc_trace(mVcdFile, in_data_data_V_0_payload_A, "in_data_data_V_0_payload_A");
    sc_trace(mVcdFile, in_data_data_V_0_payload_B, "in_data_data_V_0_payload_B");
    sc_trace(mVcdFile, in_data_data_V_0_sel_rd, "in_data_data_V_0_sel_rd");
    sc_trace(mVcdFile, in_data_data_V_0_sel_wr, "in_data_data_V_0_sel_wr");
    sc_trace(mVcdFile, in_data_data_V_0_sel, "in_data_data_V_0_sel");
    sc_trace(mVcdFile, in_data_data_V_0_load_A, "in_data_data_V_0_load_A");
    sc_trace(mVcdFile, in_data_data_V_0_load_B, "in_data_data_V_0_load_B");
    sc_trace(mVcdFile, in_data_data_V_0_state, "in_data_data_V_0_state");
    sc_trace(mVcdFile, in_data_data_V_0_state_cmp_full, "in_data_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_data_keep_V_0_data_out, "in_data_keep_V_0_data_out");
    sc_trace(mVcdFile, in_data_keep_V_0_vld_in, "in_data_keep_V_0_vld_in");
    sc_trace(mVcdFile, in_data_keep_V_0_vld_out, "in_data_keep_V_0_vld_out");
    sc_trace(mVcdFile, in_data_keep_V_0_ack_in, "in_data_keep_V_0_ack_in");
    sc_trace(mVcdFile, in_data_keep_V_0_ack_out, "in_data_keep_V_0_ack_out");
    sc_trace(mVcdFile, in_data_keep_V_0_payload_A, "in_data_keep_V_0_payload_A");
    sc_trace(mVcdFile, in_data_keep_V_0_payload_B, "in_data_keep_V_0_payload_B");
    sc_trace(mVcdFile, in_data_keep_V_0_sel_rd, "in_data_keep_V_0_sel_rd");
    sc_trace(mVcdFile, in_data_keep_V_0_sel_wr, "in_data_keep_V_0_sel_wr");
    sc_trace(mVcdFile, in_data_keep_V_0_sel, "in_data_keep_V_0_sel");
    sc_trace(mVcdFile, in_data_keep_V_0_load_A, "in_data_keep_V_0_load_A");
    sc_trace(mVcdFile, in_data_keep_V_0_load_B, "in_data_keep_V_0_load_B");
    sc_trace(mVcdFile, in_data_keep_V_0_state, "in_data_keep_V_0_state");
    sc_trace(mVcdFile, in_data_keep_V_0_state_cmp_full, "in_data_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_data_strb_V_0_data_out, "in_data_strb_V_0_data_out");
    sc_trace(mVcdFile, in_data_strb_V_0_vld_in, "in_data_strb_V_0_vld_in");
    sc_trace(mVcdFile, in_data_strb_V_0_vld_out, "in_data_strb_V_0_vld_out");
    sc_trace(mVcdFile, in_data_strb_V_0_ack_in, "in_data_strb_V_0_ack_in");
    sc_trace(mVcdFile, in_data_strb_V_0_ack_out, "in_data_strb_V_0_ack_out");
    sc_trace(mVcdFile, in_data_strb_V_0_payload_A, "in_data_strb_V_0_payload_A");
    sc_trace(mVcdFile, in_data_strb_V_0_payload_B, "in_data_strb_V_0_payload_B");
    sc_trace(mVcdFile, in_data_strb_V_0_sel_rd, "in_data_strb_V_0_sel_rd");
    sc_trace(mVcdFile, in_data_strb_V_0_sel_wr, "in_data_strb_V_0_sel_wr");
    sc_trace(mVcdFile, in_data_strb_V_0_sel, "in_data_strb_V_0_sel");
    sc_trace(mVcdFile, in_data_strb_V_0_load_A, "in_data_strb_V_0_load_A");
    sc_trace(mVcdFile, in_data_strb_V_0_load_B, "in_data_strb_V_0_load_B");
    sc_trace(mVcdFile, in_data_strb_V_0_state, "in_data_strb_V_0_state");
    sc_trace(mVcdFile, in_data_strb_V_0_state_cmp_full, "in_data_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_data_user_V_0_data_out, "in_data_user_V_0_data_out");
    sc_trace(mVcdFile, in_data_user_V_0_vld_in, "in_data_user_V_0_vld_in");
    sc_trace(mVcdFile, in_data_user_V_0_vld_out, "in_data_user_V_0_vld_out");
    sc_trace(mVcdFile, in_data_user_V_0_ack_in, "in_data_user_V_0_ack_in");
    sc_trace(mVcdFile, in_data_user_V_0_ack_out, "in_data_user_V_0_ack_out");
    sc_trace(mVcdFile, in_data_user_V_0_payload_A, "in_data_user_V_0_payload_A");
    sc_trace(mVcdFile, in_data_user_V_0_payload_B, "in_data_user_V_0_payload_B");
    sc_trace(mVcdFile, in_data_user_V_0_sel_rd, "in_data_user_V_0_sel_rd");
    sc_trace(mVcdFile, in_data_user_V_0_sel_wr, "in_data_user_V_0_sel_wr");
    sc_trace(mVcdFile, in_data_user_V_0_sel, "in_data_user_V_0_sel");
    sc_trace(mVcdFile, in_data_user_V_0_load_A, "in_data_user_V_0_load_A");
    sc_trace(mVcdFile, in_data_user_V_0_load_B, "in_data_user_V_0_load_B");
    sc_trace(mVcdFile, in_data_user_V_0_state, "in_data_user_V_0_state");
    sc_trace(mVcdFile, in_data_user_V_0_state_cmp_full, "in_data_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_data_last_V_0_data_out, "in_data_last_V_0_data_out");
    sc_trace(mVcdFile, in_data_last_V_0_vld_in, "in_data_last_V_0_vld_in");
    sc_trace(mVcdFile, in_data_last_V_0_vld_out, "in_data_last_V_0_vld_out");
    sc_trace(mVcdFile, in_data_last_V_0_ack_in, "in_data_last_V_0_ack_in");
    sc_trace(mVcdFile, in_data_last_V_0_ack_out, "in_data_last_V_0_ack_out");
    sc_trace(mVcdFile, in_data_last_V_0_payload_A, "in_data_last_V_0_payload_A");
    sc_trace(mVcdFile, in_data_last_V_0_payload_B, "in_data_last_V_0_payload_B");
    sc_trace(mVcdFile, in_data_last_V_0_sel_rd, "in_data_last_V_0_sel_rd");
    sc_trace(mVcdFile, in_data_last_V_0_sel_wr, "in_data_last_V_0_sel_wr");
    sc_trace(mVcdFile, in_data_last_V_0_sel, "in_data_last_V_0_sel");
    sc_trace(mVcdFile, in_data_last_V_0_load_A, "in_data_last_V_0_load_A");
    sc_trace(mVcdFile, in_data_last_V_0_load_B, "in_data_last_V_0_load_B");
    sc_trace(mVcdFile, in_data_last_V_0_state, "in_data_last_V_0_state");
    sc_trace(mVcdFile, in_data_last_V_0_state_cmp_full, "in_data_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_data_id_V_0_data_out, "in_data_id_V_0_data_out");
    sc_trace(mVcdFile, in_data_id_V_0_vld_in, "in_data_id_V_0_vld_in");
    sc_trace(mVcdFile, in_data_id_V_0_vld_out, "in_data_id_V_0_vld_out");
    sc_trace(mVcdFile, in_data_id_V_0_ack_in, "in_data_id_V_0_ack_in");
    sc_trace(mVcdFile, in_data_id_V_0_ack_out, "in_data_id_V_0_ack_out");
    sc_trace(mVcdFile, in_data_id_V_0_payload_A, "in_data_id_V_0_payload_A");
    sc_trace(mVcdFile, in_data_id_V_0_payload_B, "in_data_id_V_0_payload_B");
    sc_trace(mVcdFile, in_data_id_V_0_sel_rd, "in_data_id_V_0_sel_rd");
    sc_trace(mVcdFile, in_data_id_V_0_sel_wr, "in_data_id_V_0_sel_wr");
    sc_trace(mVcdFile, in_data_id_V_0_sel, "in_data_id_V_0_sel");
    sc_trace(mVcdFile, in_data_id_V_0_load_A, "in_data_id_V_0_load_A");
    sc_trace(mVcdFile, in_data_id_V_0_load_B, "in_data_id_V_0_load_B");
    sc_trace(mVcdFile, in_data_id_V_0_state, "in_data_id_V_0_state");
    sc_trace(mVcdFile, in_data_id_V_0_state_cmp_full, "in_data_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_data_dest_V_0_data_out, "in_data_dest_V_0_data_out");
    sc_trace(mVcdFile, in_data_dest_V_0_vld_in, "in_data_dest_V_0_vld_in");
    sc_trace(mVcdFile, in_data_dest_V_0_vld_out, "in_data_dest_V_0_vld_out");
    sc_trace(mVcdFile, in_data_dest_V_0_ack_in, "in_data_dest_V_0_ack_in");
    sc_trace(mVcdFile, in_data_dest_V_0_ack_out, "in_data_dest_V_0_ack_out");
    sc_trace(mVcdFile, in_data_dest_V_0_payload_A, "in_data_dest_V_0_payload_A");
    sc_trace(mVcdFile, in_data_dest_V_0_payload_B, "in_data_dest_V_0_payload_B");
    sc_trace(mVcdFile, in_data_dest_V_0_sel_rd, "in_data_dest_V_0_sel_rd");
    sc_trace(mVcdFile, in_data_dest_V_0_sel_wr, "in_data_dest_V_0_sel_wr");
    sc_trace(mVcdFile, in_data_dest_V_0_sel, "in_data_dest_V_0_sel");
    sc_trace(mVcdFile, in_data_dest_V_0_load_A, "in_data_dest_V_0_load_A");
    sc_trace(mVcdFile, in_data_dest_V_0_load_B, "in_data_dest_V_0_load_B");
    sc_trace(mVcdFile, in_data_dest_V_0_state, "in_data_dest_V_0_state");
    sc_trace(mVcdFile, in_data_dest_V_0_state_cmp_full, "in_data_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, out_data_data_V_1_data_out, "out_data_data_V_1_data_out");
    sc_trace(mVcdFile, out_data_data_V_1_vld_in, "out_data_data_V_1_vld_in");
    sc_trace(mVcdFile, out_data_data_V_1_vld_out, "out_data_data_V_1_vld_out");
    sc_trace(mVcdFile, out_data_data_V_1_ack_in, "out_data_data_V_1_ack_in");
    sc_trace(mVcdFile, out_data_data_V_1_ack_out, "out_data_data_V_1_ack_out");
    sc_trace(mVcdFile, out_data_data_V_1_payload_A, "out_data_data_V_1_payload_A");
    sc_trace(mVcdFile, out_data_data_V_1_payload_B, "out_data_data_V_1_payload_B");
    sc_trace(mVcdFile, out_data_data_V_1_sel_rd, "out_data_data_V_1_sel_rd");
    sc_trace(mVcdFile, out_data_data_V_1_sel_wr, "out_data_data_V_1_sel_wr");
    sc_trace(mVcdFile, out_data_data_V_1_sel, "out_data_data_V_1_sel");
    sc_trace(mVcdFile, out_data_data_V_1_load_A, "out_data_data_V_1_load_A");
    sc_trace(mVcdFile, out_data_data_V_1_load_B, "out_data_data_V_1_load_B");
    sc_trace(mVcdFile, out_data_data_V_1_state, "out_data_data_V_1_state");
    sc_trace(mVcdFile, out_data_data_V_1_state_cmp_full, "out_data_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_data_keep_V_1_data_out, "out_data_keep_V_1_data_out");
    sc_trace(mVcdFile, out_data_keep_V_1_vld_in, "out_data_keep_V_1_vld_in");
    sc_trace(mVcdFile, out_data_keep_V_1_vld_out, "out_data_keep_V_1_vld_out");
    sc_trace(mVcdFile, out_data_keep_V_1_ack_in, "out_data_keep_V_1_ack_in");
    sc_trace(mVcdFile, out_data_keep_V_1_ack_out, "out_data_keep_V_1_ack_out");
    sc_trace(mVcdFile, out_data_keep_V_1_payload_A, "out_data_keep_V_1_payload_A");
    sc_trace(mVcdFile, out_data_keep_V_1_payload_B, "out_data_keep_V_1_payload_B");
    sc_trace(mVcdFile, out_data_keep_V_1_sel_rd, "out_data_keep_V_1_sel_rd");
    sc_trace(mVcdFile, out_data_keep_V_1_sel_wr, "out_data_keep_V_1_sel_wr");
    sc_trace(mVcdFile, out_data_keep_V_1_sel, "out_data_keep_V_1_sel");
    sc_trace(mVcdFile, out_data_keep_V_1_load_A, "out_data_keep_V_1_load_A");
    sc_trace(mVcdFile, out_data_keep_V_1_load_B, "out_data_keep_V_1_load_B");
    sc_trace(mVcdFile, out_data_keep_V_1_state, "out_data_keep_V_1_state");
    sc_trace(mVcdFile, out_data_keep_V_1_state_cmp_full, "out_data_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_data_strb_V_1_data_out, "out_data_strb_V_1_data_out");
    sc_trace(mVcdFile, out_data_strb_V_1_vld_in, "out_data_strb_V_1_vld_in");
    sc_trace(mVcdFile, out_data_strb_V_1_vld_out, "out_data_strb_V_1_vld_out");
    sc_trace(mVcdFile, out_data_strb_V_1_ack_in, "out_data_strb_V_1_ack_in");
    sc_trace(mVcdFile, out_data_strb_V_1_ack_out, "out_data_strb_V_1_ack_out");
    sc_trace(mVcdFile, out_data_strb_V_1_payload_A, "out_data_strb_V_1_payload_A");
    sc_trace(mVcdFile, out_data_strb_V_1_payload_B, "out_data_strb_V_1_payload_B");
    sc_trace(mVcdFile, out_data_strb_V_1_sel_rd, "out_data_strb_V_1_sel_rd");
    sc_trace(mVcdFile, out_data_strb_V_1_sel_wr, "out_data_strb_V_1_sel_wr");
    sc_trace(mVcdFile, out_data_strb_V_1_sel, "out_data_strb_V_1_sel");
    sc_trace(mVcdFile, out_data_strb_V_1_load_A, "out_data_strb_V_1_load_A");
    sc_trace(mVcdFile, out_data_strb_V_1_load_B, "out_data_strb_V_1_load_B");
    sc_trace(mVcdFile, out_data_strb_V_1_state, "out_data_strb_V_1_state");
    sc_trace(mVcdFile, out_data_strb_V_1_state_cmp_full, "out_data_strb_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_data_user_V_1_data_out, "out_data_user_V_1_data_out");
    sc_trace(mVcdFile, out_data_user_V_1_vld_in, "out_data_user_V_1_vld_in");
    sc_trace(mVcdFile, out_data_user_V_1_vld_out, "out_data_user_V_1_vld_out");
    sc_trace(mVcdFile, out_data_user_V_1_ack_in, "out_data_user_V_1_ack_in");
    sc_trace(mVcdFile, out_data_user_V_1_ack_out, "out_data_user_V_1_ack_out");
    sc_trace(mVcdFile, out_data_user_V_1_payload_A, "out_data_user_V_1_payload_A");
    sc_trace(mVcdFile, out_data_user_V_1_payload_B, "out_data_user_V_1_payload_B");
    sc_trace(mVcdFile, out_data_user_V_1_sel_rd, "out_data_user_V_1_sel_rd");
    sc_trace(mVcdFile, out_data_user_V_1_sel_wr, "out_data_user_V_1_sel_wr");
    sc_trace(mVcdFile, out_data_user_V_1_sel, "out_data_user_V_1_sel");
    sc_trace(mVcdFile, out_data_user_V_1_load_A, "out_data_user_V_1_load_A");
    sc_trace(mVcdFile, out_data_user_V_1_load_B, "out_data_user_V_1_load_B");
    sc_trace(mVcdFile, out_data_user_V_1_state, "out_data_user_V_1_state");
    sc_trace(mVcdFile, out_data_user_V_1_state_cmp_full, "out_data_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_data_last_V_1_data_out, "out_data_last_V_1_data_out");
    sc_trace(mVcdFile, out_data_last_V_1_vld_in, "out_data_last_V_1_vld_in");
    sc_trace(mVcdFile, out_data_last_V_1_vld_out, "out_data_last_V_1_vld_out");
    sc_trace(mVcdFile, out_data_last_V_1_ack_in, "out_data_last_V_1_ack_in");
    sc_trace(mVcdFile, out_data_last_V_1_ack_out, "out_data_last_V_1_ack_out");
    sc_trace(mVcdFile, out_data_last_V_1_payload_A, "out_data_last_V_1_payload_A");
    sc_trace(mVcdFile, out_data_last_V_1_payload_B, "out_data_last_V_1_payload_B");
    sc_trace(mVcdFile, out_data_last_V_1_sel_rd, "out_data_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_data_last_V_1_sel_wr, "out_data_last_V_1_sel_wr");
    sc_trace(mVcdFile, out_data_last_V_1_sel, "out_data_last_V_1_sel");
    sc_trace(mVcdFile, out_data_last_V_1_load_A, "out_data_last_V_1_load_A");
    sc_trace(mVcdFile, out_data_last_V_1_load_B, "out_data_last_V_1_load_B");
    sc_trace(mVcdFile, out_data_last_V_1_state, "out_data_last_V_1_state");
    sc_trace(mVcdFile, out_data_last_V_1_state_cmp_full, "out_data_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_data_id_V_1_data_out, "out_data_id_V_1_data_out");
    sc_trace(mVcdFile, out_data_id_V_1_vld_in, "out_data_id_V_1_vld_in");
    sc_trace(mVcdFile, out_data_id_V_1_vld_out, "out_data_id_V_1_vld_out");
    sc_trace(mVcdFile, out_data_id_V_1_ack_in, "out_data_id_V_1_ack_in");
    sc_trace(mVcdFile, out_data_id_V_1_ack_out, "out_data_id_V_1_ack_out");
    sc_trace(mVcdFile, out_data_id_V_1_payload_A, "out_data_id_V_1_payload_A");
    sc_trace(mVcdFile, out_data_id_V_1_payload_B, "out_data_id_V_1_payload_B");
    sc_trace(mVcdFile, out_data_id_V_1_sel_rd, "out_data_id_V_1_sel_rd");
    sc_trace(mVcdFile, out_data_id_V_1_sel_wr, "out_data_id_V_1_sel_wr");
    sc_trace(mVcdFile, out_data_id_V_1_sel, "out_data_id_V_1_sel");
    sc_trace(mVcdFile, out_data_id_V_1_load_A, "out_data_id_V_1_load_A");
    sc_trace(mVcdFile, out_data_id_V_1_load_B, "out_data_id_V_1_load_B");
    sc_trace(mVcdFile, out_data_id_V_1_state, "out_data_id_V_1_state");
    sc_trace(mVcdFile, out_data_id_V_1_state_cmp_full, "out_data_id_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_data_dest_V_1_data_out, "out_data_dest_V_1_data_out");
    sc_trace(mVcdFile, out_data_dest_V_1_vld_in, "out_data_dest_V_1_vld_in");
    sc_trace(mVcdFile, out_data_dest_V_1_vld_out, "out_data_dest_V_1_vld_out");
    sc_trace(mVcdFile, out_data_dest_V_1_ack_in, "out_data_dest_V_1_ack_in");
    sc_trace(mVcdFile, out_data_dest_V_1_ack_out, "out_data_dest_V_1_ack_out");
    sc_trace(mVcdFile, out_data_dest_V_1_payload_A, "out_data_dest_V_1_payload_A");
    sc_trace(mVcdFile, out_data_dest_V_1_payload_B, "out_data_dest_V_1_payload_B");
    sc_trace(mVcdFile, out_data_dest_V_1_sel_rd, "out_data_dest_V_1_sel_rd");
    sc_trace(mVcdFile, out_data_dest_V_1_sel_wr, "out_data_dest_V_1_sel_wr");
    sc_trace(mVcdFile, out_data_dest_V_1_sel, "out_data_dest_V_1_sel");
    sc_trace(mVcdFile, out_data_dest_V_1_load_A, "out_data_dest_V_1_load_A");
    sc_trace(mVcdFile, out_data_dest_V_1_load_B, "out_data_dest_V_1_load_B");
    sc_trace(mVcdFile, out_data_dest_V_1_state, "out_data_dest_V_1_state");
    sc_trace(mVcdFile, out_data_dest_V_1_state_cmp_full, "out_data_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, buf_len_V, "buf_len_V");
    sc_trace(mVcdFile, buf_len_V_0_data_reg, "buf_len_V_0_data_reg");
    sc_trace(mVcdFile, buf_len_V_0_vld_reg, "buf_len_V_0_vld_reg");
    sc_trace(mVcdFile, buf_len_V_0_ack_out, "buf_len_V_0_ack_out");
    sc_trace(mVcdFile, in_data_TDATA_blk_n, "in_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_fu_179_p2, "tmp_fu_179_p2");
    sc_trace(mVcdFile, out_data_TDATA_blk_n, "out_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_1_fu_218_p1, "tmp_1_fu_218_p1");
    sc_trace(mVcdFile, icmp_fu_238_p2, "icmp_fu_238_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, buf_len_V_read_reg_324, "buf_len_V_read_reg_324");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_184_p2, "i_fu_184_p2");
    sc_trace(mVcdFile, i_reg_332, "i_reg_332");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, in_data_keep_V_tmp_reg_342, "in_data_keep_V_tmp_reg_342");
    sc_trace(mVcdFile, in_data_strb_V_tmp_reg_347, "in_data_strb_V_tmp_reg_347");
    sc_trace(mVcdFile, in_data_user_V_tmp_reg_352, "in_data_user_V_tmp_reg_352");
    sc_trace(mVcdFile, in_data_last_V_tmp_reg_357, "in_data_last_V_tmp_reg_357");
    sc_trace(mVcdFile, in_data_id_V_tmp_reg_362, "in_data_id_V_tmp_reg_362");
    sc_trace(mVcdFile, in_data_dest_V_tmp_reg_367, "in_data_dest_V_tmp_reg_367");
    sc_trace(mVcdFile, count_fu_222_p2, "count_fu_222_p2");
    sc_trace(mVcdFile, ap_predicate_op60_write_state4, "ap_predicate_op60_write_state4");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, tmp_8_fu_256_p2, "tmp_8_fu_256_p2");
    sc_trace(mVcdFile, count_2_fu_262_p2, "count_2_fu_262_p2");
    sc_trace(mVcdFile, cur_1_fu_316_p3, "cur_1_fu_316_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_op_assign_reg_119, "i_op_assign_reg_119");
    sc_trace(mVcdFile, cur1_reg_130, "cur1_reg_130");
    sc_trace(mVcdFile, val_assign_reg_140, "val_assign_reg_140");
    sc_trace(mVcdFile, cur_1_in_reg_154, "cur_1_in_reg_154");
    sc_trace(mVcdFile, count_1_reg_164, "count_1_reg_164");
    sc_trace(mVcdFile, i_op_assign_cast_fu_175_p1, "i_op_assign_cast_fu_175_p1");
    sc_trace(mVcdFile, tmp_4_fu_228_p4, "tmp_4_fu_228_p4");
    sc_trace(mVcdFile, tmp_5_fu_244_p2, "tmp_5_fu_244_p2");
    sc_trace(mVcdFile, tmp_7_fu_250_p2, "tmp_7_fu_250_p2");
    sc_trace(mVcdFile, p_neg_fu_276_p2, "p_neg_fu_276_p2");
    sc_trace(mVcdFile, p_lshr_fu_282_p4, "p_lshr_fu_282_p4");
    sc_trace(mVcdFile, tmp_2_fu_292_p1, "tmp_2_fu_292_p1");
    sc_trace(mVcdFile, p_lshr_f_fu_302_p4, "p_lshr_f_fu_302_p4");
    sc_trace(mVcdFile, tmp_6_fu_268_p3, "tmp_6_fu_268_p3");
    sc_trace(mVcdFile, p_neg_t_fu_296_p2, "p_neg_t_fu_296_p2");
    sc_trace(mVcdFile, tmp_3_fu_312_p1, "tmp_3_fu_312_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("hailstone.hdltvin.dat");
    mHdltvoutHandle.open("hailstone.hdltvout.dat");
}

hailstone::~hailstone() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete hailstone_AXILiteS_s_axi_U;
}

void hailstone::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void hailstone::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_218_p1.read())) {
            count_1_reg_164 = count_fu_222_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_218_p1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_238_p2.read()))) {
            count_1_reg_164 = count_2_fu_262_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cur1_reg_130 = cur_1_fu_316_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        cur1_reg_130 = in_data_data_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_218_p1.read())) {
            cur_1_in_reg_154 = cur1_reg_130.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_218_p1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_238_p2.read()))) {
            cur_1_in_reg_154 = tmp_8_fu_256_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(out_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
        i_op_assign_reg_119 = i_reg_332.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_op_assign_reg_119 = ap_const_lv31_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_vld_out.read()))) {
            in_data_data_V_0_sel_rd =  (sc_logic) (~in_data_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_ack_in.read()))) {
            in_data_data_V_0_sel_wr =  (sc_logic) (~in_data_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_data_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_data_data_V_0_state.read(), ap_const_lv2_2)))) {
            in_data_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_data_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_data_data_V_0_state.read(), ap_const_lv2_1)))) {
            in_data_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_data_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_data_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_data_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_ack_out.read()))))) {
            in_data_data_V_0_state = ap_const_lv2_3;
        } else {
            in_data_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_vld_out.read()))) {
            in_data_dest_V_0_sel_rd =  (sc_logic) (~in_data_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_ack_in.read()))) {
            in_data_dest_V_0_sel_wr =  (sc_logic) (~in_data_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_data_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_data_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_data_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_data_dest_V_0_state.read())))) {
            in_data_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_data_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_data_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_data_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_dest_V_0_state.read())))) {
            in_data_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_data_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_data_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_data_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_ack_out.read()))))) {
            in_data_dest_V_0_state = ap_const_lv2_3;
        } else {
            in_data_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_vld_out.read()))) {
            in_data_id_V_0_sel_rd =  (sc_logic) (~in_data_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_ack_in.read()))) {
            in_data_id_V_0_sel_wr =  (sc_logic) (~in_data_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_data_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_data_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_data_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_data_id_V_0_state.read())))) {
            in_data_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_data_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_data_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_data_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_id_V_0_state.read())))) {
            in_data_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_data_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_data_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_data_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_ack_out.read()))))) {
            in_data_id_V_0_state = ap_const_lv2_3;
        } else {
            in_data_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_vld_out.read()))) {
            in_data_keep_V_0_sel_rd =  (sc_logic) (~in_data_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_ack_in.read()))) {
            in_data_keep_V_0_sel_wr =  (sc_logic) (~in_data_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_data_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_data_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_data_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_data_keep_V_0_state.read())))) {
            in_data_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_data_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_data_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_data_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_keep_V_0_state.read())))) {
            in_data_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_data_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_data_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_data_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_ack_out.read()))))) {
            in_data_keep_V_0_state = ap_const_lv2_3;
        } else {
            in_data_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_vld_out.read()))) {
            in_data_last_V_0_sel_rd =  (sc_logic) (~in_data_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_ack_in.read()))) {
            in_data_last_V_0_sel_wr =  (sc_logic) (~in_data_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_data_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_data_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_data_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_data_last_V_0_state.read())))) {
            in_data_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_data_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_data_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_data_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_last_V_0_state.read())))) {
            in_data_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_data_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_data_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_data_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_ack_out.read()))))) {
            in_data_last_V_0_state = ap_const_lv2_3;
        } else {
            in_data_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_vld_out.read()))) {
            in_data_strb_V_0_sel_rd =  (sc_logic) (~in_data_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_ack_in.read()))) {
            in_data_strb_V_0_sel_wr =  (sc_logic) (~in_data_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_data_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_data_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_data_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_data_strb_V_0_state.read())))) {
            in_data_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_data_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_data_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_data_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_strb_V_0_state.read())))) {
            in_data_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_data_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_data_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_data_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_ack_out.read()))))) {
            in_data_strb_V_0_state = ap_const_lv2_3;
        } else {
            in_data_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_vld_out.read()))) {
            in_data_user_V_0_sel_rd =  (sc_logic) (~in_data_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_ack_in.read()))) {
            in_data_user_V_0_sel_wr =  (sc_logic) (~in_data_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_data_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_data_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_data_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_data_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_data_user_V_0_state.read())))) {
            in_data_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_data_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_data_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_data_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_user_V_0_state.read())))) {
            in_data_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_data_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_data_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_data_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_ack_out.read()))))) {
            in_data_user_V_0_state = ap_const_lv2_3;
        } else {
            in_data_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_vld_out.read()))) {
            out_data_data_V_1_sel_rd =  (sc_logic) (~out_data_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_ack_in.read()))) {
            out_data_data_V_1_sel_wr =  (sc_logic) (~out_data_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_data_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_data_data_V_1_state.read())))) {
            out_data_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_data_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_data_V_1_state.read())))) {
            out_data_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_data_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_data_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_ack_out.read()))))) {
            out_data_data_V_1_state = ap_const_lv2_3;
        } else {
            out_data_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_vld_out.read()))) {
            out_data_dest_V_1_sel_rd =  (sc_logic) (~out_data_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_ack_in.read()))) {
            out_data_dest_V_1_sel_wr =  (sc_logic) (~out_data_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_data_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_data_dest_V_1_state.read())))) {
            out_data_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_data_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_dest_V_1_state.read())))) {
            out_data_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_data_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_data_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_ack_out.read()))))) {
            out_data_dest_V_1_state = ap_const_lv2_3;
        } else {
            out_data_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_vld_out.read()))) {
            out_data_id_V_1_sel_rd =  (sc_logic) (~out_data_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_id_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_ack_in.read()))) {
            out_data_id_V_1_sel_wr =  (sc_logic) (~out_data_id_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_data_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_data_id_V_1_state.read())))) {
            out_data_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_data_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_id_V_1_state.read())))) {
            out_data_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_data_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_data_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_ack_out.read()))))) {
            out_data_id_V_1_state = ap_const_lv2_3;
        } else {
            out_data_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_vld_out.read()))) {
            out_data_keep_V_1_sel_rd =  (sc_logic) (~out_data_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_ack_in.read()))) {
            out_data_keep_V_1_sel_wr =  (sc_logic) (~out_data_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_data_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_data_keep_V_1_state.read())))) {
            out_data_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_data_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_keep_V_1_state.read())))) {
            out_data_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_data_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_data_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_ack_out.read()))))) {
            out_data_keep_V_1_state = ap_const_lv2_3;
        } else {
            out_data_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_vld_out.read()))) {
            out_data_last_V_1_sel_rd =  (sc_logic) (~out_data_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_ack_in.read()))) {
            out_data_last_V_1_sel_wr =  (sc_logic) (~out_data_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_data_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_data_last_V_1_state.read())))) {
            out_data_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_data_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_last_V_1_state.read())))) {
            out_data_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_data_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_data_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_ack_out.read()))))) {
            out_data_last_V_1_state = ap_const_lv2_3;
        } else {
            out_data_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_vld_out.read()))) {
            out_data_strb_V_1_sel_rd =  (sc_logic) (~out_data_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_strb_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_ack_in.read()))) {
            out_data_strb_V_1_sel_wr =  (sc_logic) (~out_data_strb_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_data_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_data_strb_V_1_state.read())))) {
            out_data_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_data_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_strb_V_1_state.read())))) {
            out_data_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_data_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_data_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_ack_out.read()))))) {
            out_data_strb_V_1_state = ap_const_lv2_3;
        } else {
            out_data_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_vld_out.read()))) {
            out_data_user_V_1_sel_rd =  (sc_logic) (~out_data_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_ack_in.read()))) {
            out_data_user_V_1_sel_wr =  (sc_logic) (~out_data_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_data_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_data_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_data_user_V_1_state.read())))) {
            out_data_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_data_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_user_V_1_state.read())))) {
            out_data_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_data_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_data_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_data_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_ack_out.read()))))) {
            out_data_user_V_1_state = ap_const_lv2_3;
        } else {
            out_data_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        val_assign_reg_140 = count_1_reg_164.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        val_assign_reg_140 = ap_const_lv32_0;
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buf_len_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, buf_len_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, buf_len_V_0_ack_out.read())))) {
        buf_len_V_0_data_reg = buf_len_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        buf_len_V_read_reg_324 = buf_len_V_0_data_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        i_reg_332 = i_fu_184_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_load_A.read())) {
        in_data_data_V_0_payload_A = in_data_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_load_B.read())) {
        in_data_data_V_0_payload_B = in_data_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_load_A.read())) {
        in_data_dest_V_0_payload_A = in_data_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_load_B.read())) {
        in_data_dest_V_0_payload_B = in_data_TDEST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        in_data_dest_V_tmp_reg_367 = in_data_dest_V_0_data_out.read();
        in_data_id_V_tmp_reg_362 = in_data_id_V_0_data_out.read();
        in_data_keep_V_tmp_reg_342 = in_data_keep_V_0_data_out.read();
        in_data_last_V_tmp_reg_357 = in_data_last_V_0_data_out.read();
        in_data_strb_V_tmp_reg_347 = in_data_strb_V_0_data_out.read();
        in_data_user_V_tmp_reg_352 = in_data_user_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_load_A.read())) {
        in_data_id_V_0_payload_A = in_data_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_load_B.read())) {
        in_data_id_V_0_payload_B = in_data_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_load_A.read())) {
        in_data_keep_V_0_payload_A = in_data_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_load_B.read())) {
        in_data_keep_V_0_payload_B = in_data_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_load_A.read())) {
        in_data_last_V_0_payload_A = in_data_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_load_B.read())) {
        in_data_last_V_0_payload_B = in_data_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_load_A.read())) {
        in_data_strb_V_0_payload_A = in_data_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_load_B.read())) {
        in_data_strb_V_0_payload_B = in_data_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_load_A.read())) {
        in_data_user_V_0_payload_A = in_data_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_load_B.read())) {
        in_data_user_V_0_payload_B = in_data_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_load_A.read())) {
        out_data_data_V_1_payload_A = val_assign_reg_140.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_load_B.read())) {
        out_data_data_V_1_payload_B = val_assign_reg_140.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_load_A.read())) {
        out_data_dest_V_1_payload_A = in_data_dest_V_tmp_reg_367.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_load_B.read())) {
        out_data_dest_V_1_payload_B = in_data_dest_V_tmp_reg_367.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_load_A.read())) {
        out_data_id_V_1_payload_A = in_data_id_V_tmp_reg_362.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_load_B.read())) {
        out_data_id_V_1_payload_B = in_data_id_V_tmp_reg_362.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_load_A.read())) {
        out_data_keep_V_1_payload_A = in_data_keep_V_tmp_reg_342.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_load_B.read())) {
        out_data_keep_V_1_payload_B = in_data_keep_V_tmp_reg_342.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_load_A.read())) {
        out_data_last_V_1_payload_A = in_data_last_V_tmp_reg_357.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_load_B.read())) {
        out_data_last_V_1_payload_B = in_data_last_V_tmp_reg_357.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_load_A.read())) {
        out_data_strb_V_1_payload_A = in_data_strb_V_tmp_reg_347.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_load_B.read())) {
        out_data_strb_V_1_payload_B = in_data_strb_V_tmp_reg_347.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_load_A.read())) {
        out_data_user_V_1_payload_A = in_data_user_V_tmp_reg_352.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_load_B.read())) {
        out_data_user_V_1_payload_B = in_data_user_V_tmp_reg_352.read();
    }
}

void hailstone::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void hailstone::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void hailstone::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void hailstone::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void hailstone::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void hailstone::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void hailstone::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read()));
}

void hailstone::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_ack_in.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state4.read()));
}

void hailstone::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_ack_in.read()));
}

void hailstone::thread_ap_predicate_op60_write_state4() {
    ap_predicate_op60_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_218_p1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_238_p2.read()));
}

void hailstone::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void hailstone::thread_buf_len_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_ack_in.read())))) {
        buf_len_V_0_ack_out = ap_const_logic_1;
    } else {
        buf_len_V_0_ack_out = ap_const_logic_0;
    }
}

void hailstone::thread_count_2_fu_262_p2() {
    count_2_fu_262_p2 = (!ap_const_lv32_2.is_01() || !val_assign_reg_140.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_2) + sc_biguint<32>(val_assign_reg_140.read()));
}

void hailstone::thread_count_fu_222_p2() {
    count_fu_222_p2 = (!val_assign_reg_140.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(val_assign_reg_140.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void hailstone::thread_cur_1_fu_316_p3() {
    cur_1_fu_316_p3 = (!tmp_6_fu_268_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_6_fu_268_p3.read()[0].to_bool())? p_neg_t_fu_296_p2.read(): tmp_3_fu_312_p1.read());
}

void hailstone::thread_i_fu_184_p2() {
    i_fu_184_p2 = (!i_op_assign_reg_119.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_op_assign_reg_119.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void hailstone::thread_i_op_assign_cast_fu_175_p1() {
    i_op_assign_cast_fu_175_p1 = esl_zext<32,31>(i_op_assign_reg_119.read());
}

void hailstone::thread_icmp_fu_238_p2() {
    icmp_fu_238_p2 = (!tmp_4_fu_228_p4.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_4_fu_228_p4.read()) < sc_bigint<31>(ap_const_lv31_1));
}

void hailstone::thread_in_data_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()))) {
        in_data_TDATA_blk_n = in_data_data_V_0_state.read()[0];
    } else {
        in_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void hailstone::thread_in_data_TREADY() {
    in_data_TREADY = in_data_dest_V_0_state.read()[1];
}

void hailstone::thread_in_data_data_V_0_ack_in() {
    in_data_data_V_0_ack_in = in_data_data_V_0_state.read()[1];
}

void hailstone::thread_in_data_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        in_data_data_V_0_ack_out = ap_const_logic_1;
    } else {
        in_data_data_V_0_ack_out = ap_const_logic_0;
    }
}

void hailstone::thread_in_data_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_data_V_0_sel.read())) {
        in_data_data_V_0_data_out = in_data_data_V_0_payload_B.read();
    } else {
        in_data_data_V_0_data_out = in_data_data_V_0_payload_A.read();
    }
}

void hailstone::thread_in_data_data_V_0_load_A() {
    in_data_data_V_0_load_A = (in_data_data_V_0_state_cmp_full.read() & ~in_data_data_V_0_sel_wr.read());
}

void hailstone::thread_in_data_data_V_0_load_B() {
    in_data_data_V_0_load_B = (in_data_data_V_0_sel_wr.read() & in_data_data_V_0_state_cmp_full.read());
}

void hailstone::thread_in_data_data_V_0_sel() {
    in_data_data_V_0_sel = in_data_data_V_0_sel_rd.read();
}

void hailstone::thread_in_data_data_V_0_state_cmp_full() {
    in_data_data_V_0_state_cmp_full =  (sc_logic) ((!in_data_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_data_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_in_data_data_V_0_vld_in() {
    in_data_data_V_0_vld_in = in_data_TVALID.read();
}

void hailstone::thread_in_data_data_V_0_vld_out() {
    in_data_data_V_0_vld_out = in_data_data_V_0_state.read()[0];
}

void hailstone::thread_in_data_dest_V_0_ack_in() {
    in_data_dest_V_0_ack_in = in_data_dest_V_0_state.read()[1];
}

void hailstone::thread_in_data_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        in_data_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        in_data_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void hailstone::thread_in_data_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_dest_V_0_sel.read())) {
        in_data_dest_V_0_data_out = in_data_dest_V_0_payload_B.read();
    } else {
        in_data_dest_V_0_data_out = in_data_dest_V_0_payload_A.read();
    }
}

void hailstone::thread_in_data_dest_V_0_load_A() {
    in_data_dest_V_0_load_A = (in_data_dest_V_0_state_cmp_full.read() & ~in_data_dest_V_0_sel_wr.read());
}

void hailstone::thread_in_data_dest_V_0_load_B() {
    in_data_dest_V_0_load_B = (in_data_dest_V_0_sel_wr.read() & in_data_dest_V_0_state_cmp_full.read());
}

void hailstone::thread_in_data_dest_V_0_sel() {
    in_data_dest_V_0_sel = in_data_dest_V_0_sel_rd.read();
}

void hailstone::thread_in_data_dest_V_0_state_cmp_full() {
    in_data_dest_V_0_state_cmp_full =  (sc_logic) ((!in_data_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_data_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_in_data_dest_V_0_vld_in() {
    in_data_dest_V_0_vld_in = in_data_TVALID.read();
}

void hailstone::thread_in_data_dest_V_0_vld_out() {
    in_data_dest_V_0_vld_out = in_data_dest_V_0_state.read()[0];
}

void hailstone::thread_in_data_id_V_0_ack_in() {
    in_data_id_V_0_ack_in = in_data_id_V_0_state.read()[1];
}

void hailstone::thread_in_data_id_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        in_data_id_V_0_ack_out = ap_const_logic_1;
    } else {
        in_data_id_V_0_ack_out = ap_const_logic_0;
    }
}

void hailstone::thread_in_data_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_id_V_0_sel.read())) {
        in_data_id_V_0_data_out = in_data_id_V_0_payload_B.read();
    } else {
        in_data_id_V_0_data_out = in_data_id_V_0_payload_A.read();
    }
}

void hailstone::thread_in_data_id_V_0_load_A() {
    in_data_id_V_0_load_A = (in_data_id_V_0_state_cmp_full.read() & ~in_data_id_V_0_sel_wr.read());
}

void hailstone::thread_in_data_id_V_0_load_B() {
    in_data_id_V_0_load_B = (in_data_id_V_0_sel_wr.read() & in_data_id_V_0_state_cmp_full.read());
}

void hailstone::thread_in_data_id_V_0_sel() {
    in_data_id_V_0_sel = in_data_id_V_0_sel_rd.read();
}

void hailstone::thread_in_data_id_V_0_state_cmp_full() {
    in_data_id_V_0_state_cmp_full =  (sc_logic) ((!in_data_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_data_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_in_data_id_V_0_vld_in() {
    in_data_id_V_0_vld_in = in_data_TVALID.read();
}

void hailstone::thread_in_data_id_V_0_vld_out() {
    in_data_id_V_0_vld_out = in_data_id_V_0_state.read()[0];
}

void hailstone::thread_in_data_keep_V_0_ack_in() {
    in_data_keep_V_0_ack_in = in_data_keep_V_0_state.read()[1];
}

void hailstone::thread_in_data_keep_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        in_data_keep_V_0_ack_out = ap_const_logic_1;
    } else {
        in_data_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void hailstone::thread_in_data_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_keep_V_0_sel.read())) {
        in_data_keep_V_0_data_out = in_data_keep_V_0_payload_B.read();
    } else {
        in_data_keep_V_0_data_out = in_data_keep_V_0_payload_A.read();
    }
}

void hailstone::thread_in_data_keep_V_0_load_A() {
    in_data_keep_V_0_load_A = (in_data_keep_V_0_state_cmp_full.read() & ~in_data_keep_V_0_sel_wr.read());
}

void hailstone::thread_in_data_keep_V_0_load_B() {
    in_data_keep_V_0_load_B = (in_data_keep_V_0_sel_wr.read() & in_data_keep_V_0_state_cmp_full.read());
}

void hailstone::thread_in_data_keep_V_0_sel() {
    in_data_keep_V_0_sel = in_data_keep_V_0_sel_rd.read();
}

void hailstone::thread_in_data_keep_V_0_state_cmp_full() {
    in_data_keep_V_0_state_cmp_full =  (sc_logic) ((!in_data_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_data_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_in_data_keep_V_0_vld_in() {
    in_data_keep_V_0_vld_in = in_data_TVALID.read();
}

void hailstone::thread_in_data_keep_V_0_vld_out() {
    in_data_keep_V_0_vld_out = in_data_keep_V_0_state.read()[0];
}

void hailstone::thread_in_data_last_V_0_ack_in() {
    in_data_last_V_0_ack_in = in_data_last_V_0_state.read()[1];
}

void hailstone::thread_in_data_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        in_data_last_V_0_ack_out = ap_const_logic_1;
    } else {
        in_data_last_V_0_ack_out = ap_const_logic_0;
    }
}

void hailstone::thread_in_data_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_last_V_0_sel.read())) {
        in_data_last_V_0_data_out = in_data_last_V_0_payload_B.read();
    } else {
        in_data_last_V_0_data_out = in_data_last_V_0_payload_A.read();
    }
}

void hailstone::thread_in_data_last_V_0_load_A() {
    in_data_last_V_0_load_A = (in_data_last_V_0_state_cmp_full.read() & ~in_data_last_V_0_sel_wr.read());
}

void hailstone::thread_in_data_last_V_0_load_B() {
    in_data_last_V_0_load_B = (in_data_last_V_0_sel_wr.read() & in_data_last_V_0_state_cmp_full.read());
}

void hailstone::thread_in_data_last_V_0_sel() {
    in_data_last_V_0_sel = in_data_last_V_0_sel_rd.read();
}

void hailstone::thread_in_data_last_V_0_state_cmp_full() {
    in_data_last_V_0_state_cmp_full =  (sc_logic) ((!in_data_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_data_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_in_data_last_V_0_vld_in() {
    in_data_last_V_0_vld_in = in_data_TVALID.read();
}

void hailstone::thread_in_data_last_V_0_vld_out() {
    in_data_last_V_0_vld_out = in_data_last_V_0_state.read()[0];
}

void hailstone::thread_in_data_strb_V_0_ack_in() {
    in_data_strb_V_0_ack_in = in_data_strb_V_0_state.read()[1];
}

void hailstone::thread_in_data_strb_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        in_data_strb_V_0_ack_out = ap_const_logic_1;
    } else {
        in_data_strb_V_0_ack_out = ap_const_logic_0;
    }
}

void hailstone::thread_in_data_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_strb_V_0_sel.read())) {
        in_data_strb_V_0_data_out = in_data_strb_V_0_payload_B.read();
    } else {
        in_data_strb_V_0_data_out = in_data_strb_V_0_payload_A.read();
    }
}

void hailstone::thread_in_data_strb_V_0_load_A() {
    in_data_strb_V_0_load_A = (in_data_strb_V_0_state_cmp_full.read() & ~in_data_strb_V_0_sel_wr.read());
}

void hailstone::thread_in_data_strb_V_0_load_B() {
    in_data_strb_V_0_load_B = (in_data_strb_V_0_sel_wr.read() & in_data_strb_V_0_state_cmp_full.read());
}

void hailstone::thread_in_data_strb_V_0_sel() {
    in_data_strb_V_0_sel = in_data_strb_V_0_sel_rd.read();
}

void hailstone::thread_in_data_strb_V_0_state_cmp_full() {
    in_data_strb_V_0_state_cmp_full =  (sc_logic) ((!in_data_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_data_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_in_data_strb_V_0_vld_in() {
    in_data_strb_V_0_vld_in = in_data_TVALID.read();
}

void hailstone::thread_in_data_strb_V_0_vld_out() {
    in_data_strb_V_0_vld_out = in_data_strb_V_0_state.read()[0];
}

void hailstone::thread_in_data_user_V_0_ack_in() {
    in_data_user_V_0_ack_in = in_data_user_V_0_state.read()[1];
}

void hailstone::thread_in_data_user_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
        in_data_user_V_0_ack_out = ap_const_logic_1;
    } else {
        in_data_user_V_0_ack_out = ap_const_logic_0;
    }
}

void hailstone::thread_in_data_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_user_V_0_sel.read())) {
        in_data_user_V_0_data_out = in_data_user_V_0_payload_B.read();
    } else {
        in_data_user_V_0_data_out = in_data_user_V_0_payload_A.read();
    }
}

void hailstone::thread_in_data_user_V_0_load_A() {
    in_data_user_V_0_load_A = (in_data_user_V_0_state_cmp_full.read() & ~in_data_user_V_0_sel_wr.read());
}

void hailstone::thread_in_data_user_V_0_load_B() {
    in_data_user_V_0_load_B = (in_data_user_V_0_sel_wr.read() & in_data_user_V_0_state_cmp_full.read());
}

void hailstone::thread_in_data_user_V_0_sel() {
    in_data_user_V_0_sel = in_data_user_V_0_sel_rd.read();
}

void hailstone::thread_in_data_user_V_0_state_cmp_full() {
    in_data_user_V_0_state_cmp_full =  (sc_logic) ((!in_data_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_data_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_in_data_user_V_0_vld_in() {
    in_data_user_V_0_vld_in = in_data_TVALID.read();
}

void hailstone::thread_in_data_user_V_0_vld_out() {
    in_data_user_V_0_vld_out = in_data_user_V_0_state.read()[0];
}

void hailstone::thread_out_data_TDATA() {
    out_data_TDATA = out_data_data_V_1_data_out.read();
}

void hailstone::thread_out_data_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_218_p1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_238_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        out_data_TDATA_blk_n = out_data_data_V_1_state.read()[1];
    } else {
        out_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void hailstone::thread_out_data_TDEST() {
    out_data_TDEST = out_data_dest_V_1_data_out.read();
}

void hailstone::thread_out_data_TID() {
    out_data_TID = out_data_id_V_1_data_out.read();
}

void hailstone::thread_out_data_TKEEP() {
    out_data_TKEEP = out_data_keep_V_1_data_out.read();
}

void hailstone::thread_out_data_TLAST() {
    out_data_TLAST = out_data_last_V_1_data_out.read();
}

void hailstone::thread_out_data_TSTRB() {
    out_data_TSTRB = out_data_strb_V_1_data_out.read();
}

void hailstone::thread_out_data_TUSER() {
    out_data_TUSER = out_data_user_V_1_data_out.read();
}

void hailstone::thread_out_data_TVALID() {
    out_data_TVALID = out_data_dest_V_1_state.read()[0];
}

void hailstone::thread_out_data_data_V_1_ack_in() {
    out_data_data_V_1_ack_in = out_data_data_V_1_state.read()[1];
}

void hailstone::thread_out_data_data_V_1_ack_out() {
    out_data_data_V_1_ack_out = out_data_TREADY.read();
}

void hailstone::thread_out_data_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_data_V_1_sel.read())) {
        out_data_data_V_1_data_out = out_data_data_V_1_payload_B.read();
    } else {
        out_data_data_V_1_data_out = out_data_data_V_1_payload_A.read();
    }
}

void hailstone::thread_out_data_data_V_1_load_A() {
    out_data_data_V_1_load_A = (out_data_data_V_1_state_cmp_full.read() & ~out_data_data_V_1_sel_wr.read());
}

void hailstone::thread_out_data_data_V_1_load_B() {
    out_data_data_V_1_load_B = (out_data_data_V_1_sel_wr.read() & out_data_data_V_1_state_cmp_full.read());
}

void hailstone::thread_out_data_data_V_1_sel() {
    out_data_data_V_1_sel = out_data_data_V_1_sel_rd.read();
}

void hailstone::thread_out_data_data_V_1_state_cmp_full() {
    out_data_data_V_1_state_cmp_full =  (sc_logic) ((!out_data_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_data_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_out_data_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state4.read()) && 
         esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        out_data_data_V_1_vld_in = ap_const_logic_1;
    } else {
        out_data_data_V_1_vld_in = ap_const_logic_0;
    }
}

void hailstone::thread_out_data_data_V_1_vld_out() {
    out_data_data_V_1_vld_out = out_data_data_V_1_state.read()[0];
}

void hailstone::thread_out_data_dest_V_1_ack_in() {
    out_data_dest_V_1_ack_in = out_data_dest_V_1_state.read()[1];
}

void hailstone::thread_out_data_dest_V_1_ack_out() {
    out_data_dest_V_1_ack_out = out_data_TREADY.read();
}

void hailstone::thread_out_data_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_dest_V_1_sel.read())) {
        out_data_dest_V_1_data_out = out_data_dest_V_1_payload_B.read();
    } else {
        out_data_dest_V_1_data_out = out_data_dest_V_1_payload_A.read();
    }
}

void hailstone::thread_out_data_dest_V_1_load_A() {
    out_data_dest_V_1_load_A = (out_data_dest_V_1_state_cmp_full.read() & ~out_data_dest_V_1_sel_wr.read());
}

void hailstone::thread_out_data_dest_V_1_load_B() {
    out_data_dest_V_1_load_B = (out_data_dest_V_1_sel_wr.read() & out_data_dest_V_1_state_cmp_full.read());
}

void hailstone::thread_out_data_dest_V_1_sel() {
    out_data_dest_V_1_sel = out_data_dest_V_1_sel_rd.read();
}

void hailstone::thread_out_data_dest_V_1_state_cmp_full() {
    out_data_dest_V_1_state_cmp_full =  (sc_logic) ((!out_data_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_data_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_out_data_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state4.read()) && 
         esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        out_data_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        out_data_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void hailstone::thread_out_data_dest_V_1_vld_out() {
    out_data_dest_V_1_vld_out = out_data_dest_V_1_state.read()[0];
}

void hailstone::thread_out_data_id_V_1_ack_in() {
    out_data_id_V_1_ack_in = out_data_id_V_1_state.read()[1];
}

void hailstone::thread_out_data_id_V_1_ack_out() {
    out_data_id_V_1_ack_out = out_data_TREADY.read();
}

void hailstone::thread_out_data_id_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_id_V_1_sel.read())) {
        out_data_id_V_1_data_out = out_data_id_V_1_payload_B.read();
    } else {
        out_data_id_V_1_data_out = out_data_id_V_1_payload_A.read();
    }
}

void hailstone::thread_out_data_id_V_1_load_A() {
    out_data_id_V_1_load_A = (out_data_id_V_1_state_cmp_full.read() & ~out_data_id_V_1_sel_wr.read());
}

void hailstone::thread_out_data_id_V_1_load_B() {
    out_data_id_V_1_load_B = (out_data_id_V_1_sel_wr.read() & out_data_id_V_1_state_cmp_full.read());
}

void hailstone::thread_out_data_id_V_1_sel() {
    out_data_id_V_1_sel = out_data_id_V_1_sel_rd.read();
}

void hailstone::thread_out_data_id_V_1_state_cmp_full() {
    out_data_id_V_1_state_cmp_full =  (sc_logic) ((!out_data_id_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_data_id_V_1_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_out_data_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state4.read()) && 
         esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        out_data_id_V_1_vld_in = ap_const_logic_1;
    } else {
        out_data_id_V_1_vld_in = ap_const_logic_0;
    }
}

void hailstone::thread_out_data_id_V_1_vld_out() {
    out_data_id_V_1_vld_out = out_data_id_V_1_state.read()[0];
}

void hailstone::thread_out_data_keep_V_1_ack_in() {
    out_data_keep_V_1_ack_in = out_data_keep_V_1_state.read()[1];
}

void hailstone::thread_out_data_keep_V_1_ack_out() {
    out_data_keep_V_1_ack_out = out_data_TREADY.read();
}

void hailstone::thread_out_data_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_keep_V_1_sel.read())) {
        out_data_keep_V_1_data_out = out_data_keep_V_1_payload_B.read();
    } else {
        out_data_keep_V_1_data_out = out_data_keep_V_1_payload_A.read();
    }
}

void hailstone::thread_out_data_keep_V_1_load_A() {
    out_data_keep_V_1_load_A = (out_data_keep_V_1_state_cmp_full.read() & ~out_data_keep_V_1_sel_wr.read());
}

void hailstone::thread_out_data_keep_V_1_load_B() {
    out_data_keep_V_1_load_B = (out_data_keep_V_1_sel_wr.read() & out_data_keep_V_1_state_cmp_full.read());
}

void hailstone::thread_out_data_keep_V_1_sel() {
    out_data_keep_V_1_sel = out_data_keep_V_1_sel_rd.read();
}

void hailstone::thread_out_data_keep_V_1_state_cmp_full() {
    out_data_keep_V_1_state_cmp_full =  (sc_logic) ((!out_data_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_data_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_out_data_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state4.read()) && 
         esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        out_data_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        out_data_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void hailstone::thread_out_data_keep_V_1_vld_out() {
    out_data_keep_V_1_vld_out = out_data_keep_V_1_state.read()[0];
}

void hailstone::thread_out_data_last_V_1_ack_in() {
    out_data_last_V_1_ack_in = out_data_last_V_1_state.read()[1];
}

void hailstone::thread_out_data_last_V_1_ack_out() {
    out_data_last_V_1_ack_out = out_data_TREADY.read();
}

void hailstone::thread_out_data_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_last_V_1_sel.read())) {
        out_data_last_V_1_data_out = out_data_last_V_1_payload_B.read();
    } else {
        out_data_last_V_1_data_out = out_data_last_V_1_payload_A.read();
    }
}

void hailstone::thread_out_data_last_V_1_load_A() {
    out_data_last_V_1_load_A = (out_data_last_V_1_state_cmp_full.read() & ~out_data_last_V_1_sel_wr.read());
}

void hailstone::thread_out_data_last_V_1_load_B() {
    out_data_last_V_1_load_B = (out_data_last_V_1_sel_wr.read() & out_data_last_V_1_state_cmp_full.read());
}

void hailstone::thread_out_data_last_V_1_sel() {
    out_data_last_V_1_sel = out_data_last_V_1_sel_rd.read();
}

void hailstone::thread_out_data_last_V_1_state_cmp_full() {
    out_data_last_V_1_state_cmp_full =  (sc_logic) ((!out_data_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_data_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_out_data_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state4.read()) && 
         esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        out_data_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_data_last_V_1_vld_in = ap_const_logic_0;
    }
}

void hailstone::thread_out_data_last_V_1_vld_out() {
    out_data_last_V_1_vld_out = out_data_last_V_1_state.read()[0];
}

void hailstone::thread_out_data_strb_V_1_ack_in() {
    out_data_strb_V_1_ack_in = out_data_strb_V_1_state.read()[1];
}

void hailstone::thread_out_data_strb_V_1_ack_out() {
    out_data_strb_V_1_ack_out = out_data_TREADY.read();
}

void hailstone::thread_out_data_strb_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_strb_V_1_sel.read())) {
        out_data_strb_V_1_data_out = out_data_strb_V_1_payload_B.read();
    } else {
        out_data_strb_V_1_data_out = out_data_strb_V_1_payload_A.read();
    }
}

void hailstone::thread_out_data_strb_V_1_load_A() {
    out_data_strb_V_1_load_A = (out_data_strb_V_1_state_cmp_full.read() & ~out_data_strb_V_1_sel_wr.read());
}

void hailstone::thread_out_data_strb_V_1_load_B() {
    out_data_strb_V_1_load_B = (out_data_strb_V_1_sel_wr.read() & out_data_strb_V_1_state_cmp_full.read());
}

void hailstone::thread_out_data_strb_V_1_sel() {
    out_data_strb_V_1_sel = out_data_strb_V_1_sel_rd.read();
}

void hailstone::thread_out_data_strb_V_1_state_cmp_full() {
    out_data_strb_V_1_state_cmp_full =  (sc_logic) ((!out_data_strb_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_data_strb_V_1_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_out_data_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state4.read()) && 
         esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        out_data_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        out_data_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void hailstone::thread_out_data_strb_V_1_vld_out() {
    out_data_strb_V_1_vld_out = out_data_strb_V_1_state.read()[0];
}

void hailstone::thread_out_data_user_V_1_ack_in() {
    out_data_user_V_1_ack_in = out_data_user_V_1_state.read()[1];
}

void hailstone::thread_out_data_user_V_1_ack_out() {
    out_data_user_V_1_ack_out = out_data_TREADY.read();
}

void hailstone::thread_out_data_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_user_V_1_sel.read())) {
        out_data_user_V_1_data_out = out_data_user_V_1_payload_B.read();
    } else {
        out_data_user_V_1_data_out = out_data_user_V_1_payload_A.read();
    }
}

void hailstone::thread_out_data_user_V_1_load_A() {
    out_data_user_V_1_load_A = (out_data_user_V_1_state_cmp_full.read() & ~out_data_user_V_1_sel_wr.read());
}

void hailstone::thread_out_data_user_V_1_load_B() {
    out_data_user_V_1_load_B = (out_data_user_V_1_sel_wr.read() & out_data_user_V_1_state_cmp_full.read());
}

void hailstone::thread_out_data_user_V_1_sel() {
    out_data_user_V_1_sel = out_data_user_V_1_sel_rd.read();
}

void hailstone::thread_out_data_user_V_1_state_cmp_full() {
    out_data_user_V_1_state_cmp_full =  (sc_logic) ((!out_data_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_data_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void hailstone::thread_out_data_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op60_write_state4.read()) && 
         esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
        out_data_user_V_1_vld_in = ap_const_logic_1;
    } else {
        out_data_user_V_1_vld_in = ap_const_logic_0;
    }
}

void hailstone::thread_out_data_user_V_1_vld_out() {
    out_data_user_V_1_vld_out = out_data_user_V_1_state.read()[0];
}

void hailstone::thread_p_lshr_f_fu_302_p4() {
    p_lshr_f_fu_302_p4 = cur_1_in_reg_154.read().range(31, 1);
}

void hailstone::thread_p_lshr_fu_282_p4() {
    p_lshr_fu_282_p4 = p_neg_fu_276_p2.read().range(31, 1);
}

void hailstone::thread_p_neg_fu_276_p2() {
    p_neg_fu_276_p2 = (!ap_const_lv32_0.is_01() || !cur_1_in_reg_154.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(cur_1_in_reg_154.read()));
}

void hailstone::thread_p_neg_t_fu_296_p2() {
    p_neg_t_fu_296_p2 = (!ap_const_lv32_0.is_01() || !tmp_2_fu_292_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_2_fu_292_p1.read()));
}

void hailstone::thread_tmp_1_fu_218_p1() {
    tmp_1_fu_218_p1 = cur1_reg_130.read().range(1-1, 0);
}

void hailstone::thread_tmp_2_fu_292_p1() {
    tmp_2_fu_292_p1 = esl_zext<32,31>(p_lshr_fu_282_p4.read());
}

void hailstone::thread_tmp_3_fu_312_p1() {
    tmp_3_fu_312_p1 = esl_zext<32,31>(p_lshr_f_fu_302_p4.read());
}

void hailstone::thread_tmp_4_fu_228_p4() {
    tmp_4_fu_228_p4 = cur1_reg_130.read().range(31, 1);
}

void hailstone::thread_tmp_5_fu_244_p2() {
    tmp_5_fu_244_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): cur1_reg_130.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void hailstone::thread_tmp_6_fu_268_p3() {
    tmp_6_fu_268_p3 = cur_1_in_reg_154.read().range(31, 31);
}

void hailstone::thread_tmp_7_fu_250_p2() {
    tmp_7_fu_250_p2 = (!tmp_5_fu_244_p2.read().is_01() || !cur1_reg_130.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_fu_244_p2.read()) - sc_biguint<32>(cur1_reg_130.read()));
}

void hailstone::thread_tmp_8_fu_256_p2() {
    tmp_8_fu_256_p2 = (!ap_const_lv32_1.is_01() || !tmp_7_fu_250_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(tmp_7_fu_250_p2.read()));
}

void hailstone::thread_tmp_fu_179_p2() {
    tmp_fu_179_p2 = (!i_op_assign_cast_fu_175_p1.read().is_01() || !buf_len_V_read_reg_324.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_op_assign_cast_fu_175_p1.read()) < sc_bigint<32>(buf_len_V_read_reg_324.read()));
}

void hailstone::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_179_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_data_V_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_179_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_218_p1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_238_p2.read()) && esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_block_state4_io.read(), ap_const_boolean_0) && (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_238_p2.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_218_p1.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(out_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_data_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_keep_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_strb_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_user_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_last_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_id_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_data_dest_V_1_state.read()[0]))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

void hailstone::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_data_TDATA\" :  \"" << in_data_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_data_TVALID\" :  \"" << in_data_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_data_TREADY\" :  \"" << in_data_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_data_TKEEP\" :  \"" << in_data_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_data_TSTRB\" :  \"" << in_data_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_data_TUSER\" :  \"" << in_data_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_data_TLAST\" :  \"" << in_data_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_data_TID\" :  \"" << in_data_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_data_TDEST\" :  \"" << in_data_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_TDATA\" :  \"" << out_data_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_TVALID\" :  \"" << out_data_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_data_TREADY\" :  \"" << out_data_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_TKEEP\" :  \"" << out_data_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_TSTRB\" :  \"" << out_data_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_TUSER\" :  \"" << out_data_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_TLAST\" :  \"" << out_data_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_TID\" :  \"" << out_data_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_TDEST\" :  \"" << out_data_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

